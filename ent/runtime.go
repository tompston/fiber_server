// Code generated by entc, DO NOT EDIT.

package ent

import (
	"fiber_server/ent/post"
	"fiber_server/ent/schema"
	"fiber_server/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescPostTitle is the schema descriptor for post_title field.
	postDescPostTitle := postFields[0].Descriptor()
	// post.PostTitleValidator is a validator for the "post_title" field. It is called by the builders before save.
	post.PostTitleValidator = postDescPostTitle.Validators[0].(func(string) error)
	// postDescPostBody is the schema descriptor for post_body field.
	postDescPostBody := postFields[1].Descriptor()
	// post.PostBodyValidator is a validator for the "post_body" field. It is called by the builders before save.
	post.PostBodyValidator = postDescPostBody.Validators[0].(func(string) error)
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postFields[2].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[2].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
